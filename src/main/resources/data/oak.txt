Jackrabbit Oak – Jackrabbit Oak - the next generation content repository var _paq = window._paq = window._paq || []; _paq.push(['disableCookies']); _paq.push(['trackPageView']); _paq.push(['enableLinkTracking']); (function() { var u="https://analytics.apache.org"; _paq.push(['setTrackerUrl', u+'/matomo.php']); _paq.push(['setSiteId', '4']); var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0]; g.async=true; g.src=u+'/matomo.js'; s.parentNode.insertBefore(g,s); })(); Fork me on GitHub Overview Jackrabbit Oak License Downloads Roadmap Articles Concepts and Architecture Overview The Node State Model Main APIs JCR API Jackrabbit API Oak API Features and Plugins Node Storage Document NodeStore Segment NodeStore Composite NodeStore Blob Storage Direct Binary Access Direct Binary Access Upload File Query Query Engine XPath Grammar SQL-2 Grammar Troubleshooting Indexing Indexing with Oak-Run Lucene Index Elastic Index Property Index Hybrid Index Solr Index Security Introduction Reports Authentication Authorization Principal Management User Management Atomic Counter Observation Using Oak Getting Started Repository Construction Configuring Oak Command Line Tools Migration Differences to Jackrabbit 2 Known Issues Constraints Dos and Don'ts Cold Standby FAQ Developing Oak Getting Started Participating Testing Oakathons Developing with Git Cutting diagnostic builds Branching off a new stable Attribution Release Schedule Links Apache Jackrabbit Oak Apache Jackrabbit Oak Documentation Jackrabbit/ Oak/ Jackrabbit Oak - the next generation content repository Last Published: 2024-06-11 Overview Jackrabbit Oak License Downloads Roadmap Articles Concepts and Architecture Overview The Node State Model Main APIs JCR API Jackrabbit API Oak API Features and Plugins Node Storage Document NodeStore MongoDB DocumentStore RDB DocumentStore Node Bundling Secondary Store Persistent Cache Clustering Segment NodeStore Composite NodeStore Blob Storage Direct Binary Access Direct Binary Access Upload File Query Query Engine XPath Grammar SQL-2 Grammar Troubleshooting Indexing Indexing with Oak-Run Lucene Index Elastic Index Property Index Hybrid Index Solr Index Security Introduction Reports Authentication Authorization Principal Management User Management Atomic Counter Observation Using Oak Getting Started Repository Construction Configuring Oak Command Line Tools Migration Differences to Jackrabbit 2 Known Issues Constraints Dos and Don'ts Cold Standby FAQ Developing Oak Getting Started Participating Testing Oakathons Developing with Git Cutting diagnostic builds Branching off a new stable Attribution Release Schedule Links Apache Jackrabbit Oak Apache Jackrabbit Jackrabbit Oak - the next generation content repository Jackrabbit Oak is an effort to implement a scalable and performant hierarchical content repository for use as the foundation of modern world-class web sites and other demanding content applications. The Oak effort is a part of the Apache Jackrabbit project. Apache Jackrabbit is a project of the Apache Software Foundation. Why Oak Jackrabbit 2.x is a solid and feature-rich content repository that works well especially for the needs of traditional web sites and integrated content management applications. However, the trends in user expectations (especially for personalized, interactive and collaborative content), application architectures (distributed, loosely coupled, multi-platform solutions with lots of data) and hardware design (horizontal rather than vertical scaling) have rendered some of the original Jackrabbit design decisions (which date back almost a decade) obsolete and there is no easy way to incrementally update the design. Jackrabbit Oak aims to implement a scalable and performant hierarchical content repository for use as the foundation of modern world-class web sites and other demanding content applications. The repository should implement standards like JCR, WebDAV and CMIS, and be easily accessible from various platforms, especially from JavaScript clients running in modern browser environments. The implementation should provide more out-of-the-box functionality than typical NoSQL databases while achieving comparable levels of scalability and performance. © 2012-2024 The Apache Software Foundation | Privacy Policy if(anchors) { anchors.add(); }